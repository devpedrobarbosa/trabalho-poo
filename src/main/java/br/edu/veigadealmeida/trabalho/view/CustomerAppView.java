/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.veigadealmeida.trabalho.view;

import br.edu.veigadealmeida.trabalho.model.Customer;
import br.edu.veigadealmeida.trabalho.model.Employee;
import br.edu.veigadealmeida.trabalho.view.tab.EmployeesTab;
import br.edu.veigadealmeida.trabalho.view.tab.OverviewTab;
import br.edu.veigadealmeida.trabalho.view.tab.CustomersTab;
import br.edu.veigadealmeida.trabalho.view.tab.ProfileTab;
import br.edu.veigadealmeida.trabalho.view.tab.ProjectsTab;
import java.awt.Color;
import java.util.function.Function;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author suporte
 */
public class CustomerAppView extends javax.swing.JFrame {
    
    /*
    * Essa Enum foi criada para conter todas as páginas do aplicativo.
    * Em seu corpo, ela contém uma função que, ao ser chamada, deve exibir a tela relacionada
    * à página em questão.
    * Essa funcionalidade permite fácil criação de novas páginas, além de maior organização e otimização
    * do código
    */
    public enum Pages {
        OVERVIEW(o -> new OverviewTab()),
        EMPLOYEES(o -> new EmployeesTab((Employee) o)),
        PARTNERS(o -> new CustomersTab((Employee) o)),
        PROJECTS(o -> new ProjectsTab()),
        PROFILE(o -> new ProfileTab((Employee) o));
        
        final Function<Object, JPanel> makePanel;
        
        Pages(Function<Object, JPanel> makePanel) {
            this.makePanel = makePanel;
        }
    }
    
    private static CustomerAppView instance;
    
    //Método criado para realizar requisições de update na tela principal vindo de telas secundárias
    public static void requestUpdateVisualization() {
        if(instance != null)
            instance.updateVisualization();
    }
    
    //Método criado para requisitar o fechamento da tela principal por telas diferentes
    public static void requestDispose() {
        if(instance != null)
            instance.dispose();
    }
    
    //Variáveis criadas para facilitar o desenvolvimento das funcionalidades de páginas e botões
    private final Color buttonBackgroundColor, darkerButtonBackgroundColor;
    
    private Pages openedPage;
    private Object currentPageObject;
    private JPanel openedPanel;
    private JButton selectedButton;
    
    //Variável que vai receber o funcionário que logou no sistema
    private final Customer customer;
    
    /**
     * Creates new form AppView
     */
    public CustomerAppView(Customer customer) { //Iniciando tela principal
        initComponents(); //Código gerado
        setLocationRelativeTo(null); //Centralizar a tela
        setResizable(false); //Não permitir que seja redimensionada
        buttonBackgroundColor = new Color(122, 178, 211); //Armazena a cor padrão dos botões para facilitar o desenvolvimento
        darkerButtonBackgroundColor = new Color(112, 168, 201); //Nesse caso, a cor quando o botão está selecionado
        handleSwitch(Pages.OVERVIEW, null, overviewTab); //Realiza a abertura da página padrão
        instance = this; //Recebe a instância atual da classe, para ser acessada estáticamente por outras classes
        this.customer = customer; //Recebe o funcionário que logou no sistema
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        navigation = new javax.swing.JPanel();
        overviewTab = new javax.swing.JButton();
        projectsTab = new javax.swing.JButton();
        profileTab = new javax.swing.JButton();
        display = new javax.swing.JLayeredPane();
        menu = new javax.swing.JMenuBar();
        visualizationMenu = new javax.swing.JMenu();
        updateVisualizationButton = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutButton = new javax.swing.JMenuItem();
        exitButton = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TechNest");
        setResizable(false);

        navigation.setBackground(new java.awt.Color(122, 178, 211));
        navigation.setPreferredSize(new java.awt.Dimension(150, 500));

        overviewTab.setBackground(new java.awt.Color(122, 178, 211));
        overviewTab.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        overviewTab.setForeground(new java.awt.Color(255, 255, 255));
        overviewTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/overview-icon.png"))); // NOI18N
        overviewTab.setText("Visão Geral");
        overviewTab.setBorder(null);
        overviewTab.setIconTextGap(10);
        overviewTab.setPreferredSize(new java.awt.Dimension(150, 50));
        overviewTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonMouseExited(evt);
            }
        });
        overviewTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToOverview(evt);
            }
        });

        projectsTab.setBackground(new java.awt.Color(122, 178, 211));
        projectsTab.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        projectsTab.setForeground(new java.awt.Color(255, 255, 255));
        projectsTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projects-icon.png"))); // NOI18N
        projectsTab.setText("Projetos");
        projectsTab.setBorder(null);
        projectsTab.setIconTextGap(10);
        projectsTab.setPreferredSize(new java.awt.Dimension(150, 50));
        projectsTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                projectsTabbuttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                projectsTabbuttonMouseExited(evt);
            }
        });
        projectsTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToProjects(evt);
            }
        });

        profileTab.setBackground(new java.awt.Color(122, 178, 211));
        profileTab.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        profileTab.setForeground(new java.awt.Color(255, 255, 255));
        profileTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/profile-icon.png"))); // NOI18N
        profileTab.setText("Seu Perfil");
        profileTab.setBorder(null);
        profileTab.setIconTextGap(10);
        profileTab.setPreferredSize(new java.awt.Dimension(150, 50));
        profileTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                profileTabbuttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                profileTabbuttonMouseExited(evt);
            }
        });
        profileTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToProfile(evt);
            }
        });

        javax.swing.GroupLayout navigationLayout = new javax.swing.GroupLayout(navigation);
        navigation.setLayout(navigationLayout);
        navigationLayout.setHorizontalGroup(
            navigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(overviewTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(projectsTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(profileTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        navigationLayout.setVerticalGroup(
            navigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationLayout.createSequentialGroup()
                .addComponent(overviewTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projectsTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(profileTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(348, Short.MAX_VALUE))
        );

        getContentPane().add(navigation, java.awt.BorderLayout.LINE_START);

        javax.swing.GroupLayout displayLayout = new javax.swing.GroupLayout(display);
        display.setLayout(displayLayout);
        displayLayout.setHorizontalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 874, Short.MAX_VALUE)
        );
        displayLayout.setVerticalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );

        getContentPane().add(display, java.awt.BorderLayout.CENTER);

        menu.setBackground(new java.awt.Color(74, 98, 138));
        menu.setBorder(null);
        menu.setForeground(new java.awt.Color(255, 255, 255));
        menu.setBorderPainted(false);
        menu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        menu.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        menu.setOpaque(true);
        menu.setPreferredSize(new java.awt.Dimension(73, 30));

        visualizationMenu.setForeground(new java.awt.Color(255, 255, 255));
        visualizationMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view-icon.png"))); // NOI18N
        visualizationMenu.setText("Visualização");
        visualizationMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonMouseExited(evt);
            }
        });

        updateVisualizationButton.setText("Atualizar");
        updateVisualizationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateVisualizationClick(evt);
            }
        });
        visualizationMenu.add(updateVisualizationButton);

        menu.add(visualizationMenu);

        helpMenu.setForeground(new java.awt.Color(255, 255, 255));
        helpMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/help-icon.png"))); // NOI18N
        helpMenu.setText("Ajuda");

        aboutButton.setText("Sobre");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonClick(evt);
            }
        });
        helpMenu.add(aboutButton);

        exitButton.setText("Fechar");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonClick(evt);
            }
        });
        helpMenu.add(exitButton);

        menu.add(helpMenu);

        setJMenuBar(menu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Quando mouse encontrar um botão, background do mesmo fica escuro
    private void buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMouseEntered
        // TODO add your handling code here:
        if(evt.getSource() instanceof JButton button && button == selectedButton) return;
        evt.getComponent().setBackground(darkerButtonBackgroundColor);
    }//GEN-LAST:event_buttonMouseEntered

    //Quando mouse sair da área do botão, background do mesmo fica padrão novamente
    private void buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonMouseExited
        // TODO add your handling code here:
        if(evt.getSource() instanceof JButton button && button == selectedButton) return;
        evt.getComponent().setBackground(buttonBackgroundColor);
    }//GEN-LAST:event_buttonMouseExited

    //Ao clicar em Fechar, encerra o programa a força
    private void exitButtonClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonClick
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonClick

    //Ao clicar em sobre, abre nova janela contendo informações sobre o programa e seus autores
    private void aboutButtonClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonClick
        // TODO add your handling code here:
        new AboutApp().setVisible(true);
    }//GEN-LAST:event_aboutButtonClick

    /*
    Esse método foi criado para facilitar a exibição correta do conteúdo da página
    selecionada.
    Ele identifica a página aberta atualmente, esconde ela, e em seguida exibe a página
    solicitada, definindo-a como conteúdo do openedPanel.
    */
    private void handleSwitch(Pages page, Object o, JButton button) {
        if(openedPanel != null) {
            openedPanel.setVisible(false);
            remove(openedPanel);
        }
        final JPanel panel = page.makePanel.apply(o);
        add(panel);
        openedPanel = panel;
        openedPage = page;
        currentPageObject = o;
        if(selectedButton != null)
            selectedButton.setBackground(buttonBackgroundColor);
        button.setBackground(darkerButtonBackgroundColor);
        selectedButton = button;
        revalidate();
    }
    
    //Ao clicar em Visão Geral, exibe conteúdo da tela em questão
    private void switchToOverview(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToOverview
        // TODO add your handling code here:
        handleSwitch(Pages.OVERVIEW, null, (JButton) evt.getSource());
    }//GEN-LAST:event_switchToOverview

    //Lógica adotada: repete todo o processo de abertura da página
    private void updateVisualization() {
        handleSwitch(openedPage, currentPageObject, selectedButton);
    }
    
    //Ao clicar em atualizar, deve refazer as consultas no banco de dados referente a página atual e mostrar as informações atualizadas
    private void updateVisualizationClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateVisualizationClick
        // TODO add your handling code here:
        updateVisualization();
    }//GEN-LAST:event_updateVisualizationClick

    private void projectsTabbuttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectsTabbuttonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_projectsTabbuttonMouseEntered

    private void projectsTabbuttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectsTabbuttonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_projectsTabbuttonMouseExited

    //Ao clicar em Projetos, exibe conteúdo da tela em questão
    private void switchToProjects(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToProjects
        // TODO add your handling code here:
        handleSwitch(Pages.PROJECTS, null, (JButton) evt.getSource());
    }//GEN-LAST:event_switchToProjects

    private void profileTabbuttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileTabbuttonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_profileTabbuttonMouseEntered

    private void profileTabbuttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileTabbuttonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_profileTabbuttonMouseExited

    //Ao clicar em Seu Perfil, exibe conteúdo da tela em questão
    private void switchToProfile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToProfile
        // TODO add your handling code here:
        handleSwitch(Pages.PROFILE, customer, (JButton) evt.getSource());
    }//GEN-LAST:event_switchToProfile

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutButton;
    private javax.swing.JLayeredPane display;
    private javax.swing.JMenuItem exitButton;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menu;
    private javax.swing.JPanel navigation;
    private javax.swing.JButton overviewTab;
    private javax.swing.JButton profileTab;
    private javax.swing.JButton projectsTab;
    private javax.swing.JMenuItem updateVisualizationButton;
    private javax.swing.JMenu visualizationMenu;
    // End of variables declaration//GEN-END:variables
}
